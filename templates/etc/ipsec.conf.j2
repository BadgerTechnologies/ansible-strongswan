# /etc/ipsec.conf - strongSwan IPsec configuration file

config setup
    cachecrls=yes
    uniqueids=no
    charondebug="" 

#config_setup_cachecrls: yes
#config_setup_uniqueids=no
#config_setup_charondebug=""

conn %default
{% if conn_default_ikelifetime != false %}
  # How long the keying channel of a connection (ISAKMP or IKE SA) should last before being renegotiated.
  ikelifetime={{ conn_default_ikelifetime }}
{% endif %}
{% if conn_default_lifetime != false %}
  # How long a particular instance of a connection (a set of encryption/authentication keys for user packets) should last, from successful negotiation to expiry.
  lifetime={{ conn_default_lifetime }}
{% endif %}
{% if conn_default_margintime != false %}
  # How long a particular instance of a connection (a set of encryption/authentication keys for user packets) should last, from successful negotiation to expiry.
  margintime={{ conn_default_margintime }}
{% endif %}
{% if conn_default_keyingtries != false %}
  # How many attempts (a positive integer or %forever) should be made to negotiate a connection, or a replacement for one, before giving up (default 3).
  keyingtries={{ conn_default_keyingtries }}
{% endif %}
{% if conn_default_authby != false %}
  # How the two security gateways should authenticate each other
  authby={{ conn_default_authby }}
{% endif %}
{% if conn_default_keyexchange != false %}
  # Method of key exchange; which protocol should be used to initialize the connection.
  keyexchange={{ conn_default_keyexchange }}
{% endif %}
  # Enables the IKEv2 MOBIKE protocol defined by RFC 4555.
{% if conn_default_mobike != false %}
  mobike=yes
{% else %}
  mobike=no
{% endif %}

{% for connitem in strongswan_conn %}
conn {{ connitem.name }}
{% if connitem.leftip != false %}
  # The IP address of the participant's public-network interface or one of several magic values.
  left={{ connitem.leftip }}
{% endif %}
{% if connitem.leftsubnet != false %}
  # Private subnet behind the participant, expressed as network/netmask
  leftsubnet={{ connitem.leftsubnet }}
{% endif %}
{% if connitem.leftid != false %}
  # How the participant should be identified for authentication
  leftid={{ connitem.leftid }}
{% endif %}
  # whether the participant is doing forwarding-firewalling (including masquerading) using iptables or traffic from other participant subnet, which should be turned off for traffic to the other subnet) once the connection is established  
{% if connitem.leftfirewall != false %}
  leftfirewall=yes
{% else %}
  leftfirewall=no
{% endif %}
{% if connitem.rightip != false %}
  # The IP address of the participant's public-network interface or one of several magic values.
  right={{ connitem.rightip }}
{% endif %}
{% if connitem.rightsubnet != false %}
  # Private subnet behind the participant, expressed as network/netmask
  rightsubnet={{ connitem.rightsubnet }}
{% endif %}
{% if connitem.rightid != false %}
  # How the participant should be identified for authentication
  rightid={{ connitem.rightid }}
{% endif %}
{% if connitem.ike != false %}
  # Comma-separated list of IKE/ISAKMP SA encryption/authentication algorithms to be used
  ike={{ connitem.ike }}
{% endif %}
{% if connitem.esp != false %}
  # Comma-separated list of ESP encryption/authentication algorithms to be used for the connection
  esp={{ connitem.esp }}
{% endif %}
{% if connitem.auto != false %}
  # What operation, if any, should be done automatically at IPsec startup.
  auto={{ connitem.auto }}
{% endif %}

{% endfor %}

